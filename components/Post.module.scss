.entry {
    display: block;
    clear: left;
    text-align: justify;
    margin-bottom: 2em;
    background-color: var(--theme-color-content-text-bg);
    border-radius: var(--theme-border-radius-large);
    padding: 15px;
}

.entry .title {
    font-family: var(--font-title);
    font-size: 24px;
    font-weight: 400;
    border-bottom: 1px solid var(--theme-color-border);
    margin: 0;
    text-align: left;

}

.entry .title a {
    color: var(--theme-color-title);
    border: none;
}

.entry a {
    color: var(--theme-color-link);
    border-bottom: 1px solid var(--theme-color-link-underline);
}

.entrymetainfo, .entryfooter {
    font-size: 0.8em;
    color: #555;
    display: block;
    padding-top: 2px;
    font-family: sans-serif;
    margin-bottom: 0.5em;
}

.entrymetainfo a {
    border: 0;
    color: var(--theme-color-pop);
}

.tagslist {
    font-variant-caps: small-caps;
    float: right;
}

.tagslist:before {
    content: 'tags:';
}

.tagslist li {
    display: inline;
    margin-left: 0.3em;
}

.entry img, .entry a.maplink {
    position: relative;
    left: -15px;
    width: calc(100% + 30px); /* 15px margins, but we want full-width */
    max-width: calc(100% + 30px); /* 15px margins, but we want full-width */
}

/**
 * Hacky, fine for now. Align embedded YouTube videos.
 */
.entry iframe[title="YouTube video player"] {
    position: relative;
    left: -15px;
    /* hacky fix for the problem of YT videos being hard-coded to 630px wide */
    /* --post-width and --iframe-height are set in Post.jsx */
    --scale: calc(var(--post-width) / 630); /* --post-width set in Post.jsx */
    --margin: calc(var(--iframe-height) * (1 - var(--scale)) * -1/2);
    transform-origin: left center; /* Scale from the left */
    transform: scale(var(--scale));
    margin-top: var(--margin);
    margin-bottom: var(--margin);
}

.entry h2 {
    overflow: hidden;
    textarea {
        width: 100%;
        max-width: calc(100% - 26px);
    }
}

.entry textarea {
    border: 3px solid #445566;
    margin: 10px;
}


.entry p {
    margin: 0.5em 0 1em 0;
    line-height: 1.5em;
}

.entryfooter {
    text-align: center;
}

.entryfooter a {
    color: var(--theme-color-pop);
}

.entryfooter button {
    /* I'm in a hurry. Let's just make this usable & get on with our lives... */
    margin: 20px;
    background-color: black;
    color: white;
    padding: 10px;
    font-weight: bold;
    border-radius: 10px;
}


/* These need to be visually positioned to the sides of the main column. That column is
 * centered, and has:
 *   width: 630px;
 *   max-width: calc(100vw - 20px)
 *
 * So, we can position these at the sides of the viewport by setting their left/right
 * to 50% and then translating them by half the width of the main column.
 */
.nextPrevLinksContainer {
    --post-width: calc(min(630px, calc(100vw - 20px)));
    --button-offset: calc(min((51vw + var(--post-width) / 2), (100vw - 8vw)));

    .nextLink, .prevLink {
        font-size: 8vw;
        position: fixed;
        padding: 1vw 2vw;
        border: 3px solid var(--theme-color-border-light);
        background-color: var(--theme-color-link);
        color: var(--theme-color-pop);
        line-height: 6vw;
        bottom: 50vw;
        border-radius: 1vw;

        &:hover {
            opacity: 1;
            color: var(--theme-color-link);
            background-color: var(--theme-color-content-text-bg);
        }

        transition: all 200ms ease-in-out;
    }

    .nextLink {
        right: var(--button-offset);
        transform: rotate(-90deg);
        transform-origin: right bottom;
    }

    .prevLink {
        left: var(--button-offset);
        transform: rotate(90deg);
        transform-origin: left bottom;
    }

}
